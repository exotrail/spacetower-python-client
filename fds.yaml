openapi: 3.0.1
info:
  contact:
    email: contact@exotrail.com
    name: ExoTrail
  description: API for Flight Dynamics System
  title: FDS API
  version: 1.0.0
servers:
- description: FDS API
  url: /
tags:
- description: Covariance Matrix related endpoints
  name: Covariance Matrix
- description: Telemetry related endpoints
  name: Telemetry
- description: Parameter Estimation Request related endpoints
  name: Parameter Estimation Request
- description: Ephemeris request related endpoints
  name: EphemerisRequestController
- description: Orbit Determination Configuration related endpoints
  name: Orbit Determination Configuration
- description: Solar Array related endpoints
  name: Solar Array
- description: Maneuver Generation related endpoints
  name: Maneuver Generation
- description: Orbit Extrapolation related endpoints
  name: Orbit Extrapolation
- description: Orbit related endpoints
  name: Orbit
- description: Orbital State related endpoints
  name: Orbital State
- description: Measurements Request related endpoints
  name: Measurements Request
- description: TLE SGP4 Extrapolation related endpoints
  name: TLE SGP4 Extrapolation
- description: Orbit Data Message Request related endpoints
  name: Orbit Data Message Request
- description: Orbit Determination related endpoints
  name: Orbit Determination
- description: Battery related endpoints
  name: Battery
- description: Maneuver Strategy related endpoints
  name: Maneuver Strategy
- description: Spacecraft related endpoints
  name: Spacecraft
- description: Thruster related endpoints
  name: Thruster
- description: Roadmap related endpoints
  name: Roadmap
- description: Events Request related endpoints
  name: Events Request
- description: Ground Station related endpoints
  name: Ground Station
- description: Propagation Context related endpoints
  name: Propagation Context
- description: Roadmap Action related endpoints
  name: Roadmap Action
paths:
  /batteries:
    get:
      operationId: retrieveAllBatteries
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatteryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Battery
  /battery:
    post:
      operationId: createBattery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatteryDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatteryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Battery
  /battery/{id}:
    delete:
      operationId: deleteBattery
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Battery
    get:
      operationId: retrieveBattery
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatteryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Battery
  /covariance-matrices:
    get:
      operationId: retrieveAll_10
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FullCovarianceMatrixDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Covariance Matrix
  /covariance-matrix:
    post:
      operationId: createCovarianceMatrix
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullCovarianceMatrixDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CovarianceMatrixDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Covariance Matrix
  /covariance-matrix/diagonal:
    post:
      operationId: createDiagonalCovarianceMatrix
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagonalCovarianceMatrixDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CovarianceMatrixDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Covariance Matrix
  /covariance-matrix/{id}:
    delete:
      operationId: delete_1
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Covariance Matrix
    get:
      operationId: retrieve_2
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CovarianceMatrixDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Covariance Matrix
  /determination/result/{id}:
    get:
      operationId: getOrbitDeterminationResult
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDeterminationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Determination
  /determination/ukf:
    post:
      operationId: runUkfOrbitDetermination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UkfOrbitDeterminationInputDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDeterminationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Determination
  /determination/{id}:
    get:
      operationId: getOrbitDetermination
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDeterminationOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Determination
  /determination/{id}/results:
    get:
      operationId: getOrbitDeterminationResultByDeterminationId
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrbitDeterminationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Determination
  /determinations:
    get:
      operationId: retrieveAllOrbitDeterminations
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrbitDeterminationOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Determination
  /ephemeris-request:
    post:
      operationId: createEphemerisRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EphemerisRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EphemerisRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - EphemerisRequestController
  /ephemeris-request/{id}:
    delete:
      operationId: delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - EphemerisRequestController
    get:
      operationId: retrieve_1
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EphemerisRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - EphemerisRequestController
  /ephemeris-requests:
    get:
      operationId: retrieveAll_9
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EphemerisRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - EphemerisRequestController
  /events/request/orbital:
    post:
      operationId: createEventRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrbitalEventsRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Events Request
  /events/request/sensor:
    post:
      operationId: createSensorEventRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensorEventRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Events Request
  /events/request/station-visibility:
    post:
      operationId: createStationVisibilityEventRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationVisibilityEventsRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Events Request
  /events/request/{id}:
    delete:
      operationId: deleteEventRequest
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Events Request
    get:
      operationId: retrieveEventsRequest
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Events Request
  /events/requests:
    get:
      operationId: retrieveAll_8
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Events Request
  /extrapolation:
    post:
      operationId: runOrbitExtrapolation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrbitExtrapolationInputDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitExtrapolationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Extrapolation
  /extrapolation/result/{id}:
    get:
      operationId: getOrbitExtrapolationResult
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitExtrapolationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Extrapolation
  /extrapolation/{id}:
    get:
      operationId: getOrbitExtrapolation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitExtrapolationOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Extrapolation
  /extrapolation/{id}/results:
    get:
      operationId: getOrbitExtrapolationResultByExtrapolationId
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrbitExtrapolationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Extrapolation
  /extrapolations:
    get:
      operationId: retrieveAllOrbitExtrapolations
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrbitExtrapolationOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Extrapolation
  /maneuver-generation:
    post:
      operationId: runManeuverGeneration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManeuverGenerationInputDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManeuverGenerationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Maneuver Generation
  /maneuver-generation/result/{id}:
    get:
      operationId: getManeuverGenerationResult
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManeuverGenerationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Maneuver Generation
  /maneuver-generation/{id}:
    get:
      operationId: getManeuverGeneration
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManeuverGenerationOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Maneuver Generation
  /maneuver-generation/{id}/results:
    get:
      operationId: getManeuverGenerationResultByRequestId
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManeuverGenerationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Maneuver Generation
  /maneuver-generations:
    get:
      operationId: retrieveAllManeuverGenerations
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManeuverGenerationOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Maneuver Generation
  /maneuver-strategies:
    get:
      operationId: retrieveAll_7
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManeuverStrategyDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Maneuver Strategy
  /maneuver-strategy:
    post:
      operationId: createManeuverStrategy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManeuverStrategyDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManeuverStrategyDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Maneuver Strategy
  /maneuver-strategy/{id}:
    delete:
      operationId: deleteManoeuvreStrategy
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Maneuver Strategy
    get:
      operationId: retrieveManoeuvreStrategyById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManeuverStrategyDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Maneuver Strategy
  /measurements/requests:
    get:
      operationId: retrieveAll_6
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeasurementsRequestDto'
          description: OK
      tags:
      - Measurements Request
  /measurements/requests/gps-nmea:
    post:
      operationId: createGpsNmeaMeasurementsRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GpsNmeaMeasurementsRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Measurements Request
  /measurements/requests/gps-pv:
    post:
      operationId: createGpsMeasurementsRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GpsPvMeasurementsRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Measurements Request
  /measurements/requests/optical:
    post:
      operationId: createOpticalMeasurementsRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpticalMeasurementsRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Measurements Request
  /measurements/requests/radar:
    post:
      operationId: createRadarMeasurementsRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadarMeasurementsRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Measurements Request
  /measurements/requests/{id}:
    delete:
      operationId: deleteMeasurementsRequest
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Measurements Request
    get:
      operationId: retrieveMeasurementsRequestById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementsRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Measurements Request
  /od-configuration/ukf:
    post:
      operationId: createUkfOrbitDeterminationConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UkfOrbitDeterminationConfigurationDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UkfOrbitDeterminationConfigurationDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Determination Configuration
  /od-configuration/{id}:
    delete:
      operationId: deleteUkfOrbitDeterminationConfiguration
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Determination Configuration
    get:
      operationId: retrieveOrbitDeterminationConfigurationById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UkfOrbitDeterminationConfigurationDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Determination Configuration
  /od-configurations:
    get:
      operationId: retrieveAllOrbitDeterminationConfigurations
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - $ref: '#/components/schemas/UkfOrbitDeterminationConfigurationDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Determination Configuration
  /od-telemetries:
    get:
      operationId: retrieveAll_5
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelemetryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Telemetry
  /od-telemetry/gps-nmea:
    post:
      operationId: createGpsNmeaTelemetry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GpsNmeaTelemetryDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Telemetry
  /od-telemetry/gps-nmea-raw:
    post:
      operationId: createGpsNmeaTelemetryRaw
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GpsNmeaRawTelemetryDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Telemetry
  /od-telemetry/gps-pv:
    post:
      operationId: createGpsPvTelemetry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GpsPvTelemetryDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Telemetry
  /od-telemetry/optical:
    post:
      operationId: createOpticalTelemetry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpticalTelemetryDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Telemetry
  /od-telemetry/radar:
    post:
      operationId: createRadarTelemetry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadarTelemetryDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Telemetry
  /od-telemetry/{id}:
    delete:
      operationId: deleteTelemetry
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Telemetry
    get:
      operationId: retrieve
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Telemetry
  /orbit-data-message/requests:
    get:
      operationId: retrieveAll_4
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrbitDataMessageRequestDto'
          description: OK
      tags:
      - Orbit Data Message Request
  /orbit-data-message/requests/oem:
    post:
      operationId: createOemRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OemRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDataMessageRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Data Message Request
  /orbit-data-message/requests/{id}:
    delete:
      operationId: deleteOrbitDataMessageRequest
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Data Message Request
    get:
      operationId: retrieveOrbitDataMessageRequestById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDataMessageRequestDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit Data Message Request
  /orbit/cartesian:
    post:
      operationId: createCartesianOrbit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartesianOrbitDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit
  /orbit/circular:
    post:
      operationId: createCircularOrbit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CircularOrbitDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit
  /orbit/equinoctial:
    post:
      operationId: createEquinoctialOrbit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquinoctialOrbitDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit
  /orbit/keplerian:
    post:
      operationId: createKeplerianOrbit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeplerianOrbitDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit
  /orbit/{id}:
    delete:
      operationId: deleteOrbit
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit
    get:
      operationId: retrieveOrbitById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit
  /orbital-state:
    post:
      operationId: createOrbitalState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrbitalStateCreationRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitalStateDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbital State
  /orbital-state/{id}:
    delete:
      operationId: deleteOrbitalState
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbital State
    get:
      operationId: retrieveOrbitalStateById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitalStateDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbital State
  /orbital-states:
    get:
      operationId: retrieveAll_3
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrbitalStateDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbital State
  /orbits:
    get:
      operationId: retrieveAll_2
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrbitDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Orbit
  /parameter-estimation-request/all:
    get:
      operationId: retrieveAll_1
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParameterEstimationRequestOutputDto'
          description: OK
      tags:
      - Parameter Estimation Request
  /parameter-estimation-request/drag-coefficient:
    post:
      operationId: createDragCoefficientEstimationRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DragCoefficientEstimationRequestInputDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterEstimationRequestOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Parameter Estimation Request
  /parameter-estimation-request/reflectivity-coefficient:
    post:
      operationId: createReflectivityCoefficientEstimationRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReflectivityCoefficientEstimationRequestInputDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterEstimationRequestOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Parameter Estimation Request
  /parameter-estimation-request/thrust-vector:
    post:
      operationId: createThrustVectorEstimationRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThrustVectorEstimationRequestInputDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterEstimationRequestOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Parameter Estimation Request
  /parameter-estimation-request/{id}:
    delete:
      operationId: deleteParameterEstimationRequest
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Parameter Estimation Request
    get:
      operationId: retrieveParameterEstimationRequestById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterEstimationRequestOutputDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Parameter Estimation Request
  /propagation-context:
    post:
      operationId: createPropagationContext
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropagationContextDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropagationContextDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Propagation Context
  /propagation-context/{id}:
    delete:
      operationId: deletePropagationContext
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Propagation Context
    get:
      operationId: retrieveContext
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropagationContextDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Propagation Context
  /propagation-contexts:
    get:
      operationId: retrieveAllContexts
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PropagationContextDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Propagation Context
  /roadmap-action/attitude:
    post:
      operationId: createAttitudeAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttitudeActionDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapActionDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap Action
  /roadmap-action/firing:
    post:
      operationId: createFiringAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FiringActionDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapActionDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap Action
  /roadmap-action/quaternion:
    post:
      operationId: createQuaternionAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuaternionActionDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapActionDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap Action
  /roadmap-action/{id}:
    delete:
      operationId: deleteRoadmapAction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap Action
    get:
      operationId: retrieveRoadmapAction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapActionDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap Action
  /roadmap-actions:
    get:
      operationId: retrieveAllRoadmapActions
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoadmapActionDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap Action
  /roadmap/from-actions:
    post:
      operationId: createRoadmap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoadmapFromActionsDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap
  /roadmap/{id}:
    delete:
      operationId: deleteRoadmap
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap
    get:
      operationId: retrieveRoadmap
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoadmapDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap
  /roadmaps:
    get:
      operationId: retrieveAllRoadmaps
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoadmapDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Roadmap
  /solar-array:
    post:
      operationId: createSolarArray
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolarArrayDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolarArrayDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Solar Array
  /solar-array/{id}:
    delete:
      operationId: deleteSolarArray
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Solar Array
    get:
      operationId: retrieveSolarArray
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolarArrayDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Solar Array
  /solar-arrays:
    get:
      operationId: retrieveAllSolarArrays
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SolarArrayDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Solar Array
  /spacecraft/box:
    post:
      operationId: createBoxSpacecraft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoxSpacecraftInputDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Spacecraft
  /spacecraft/spherical:
    post:
      operationId: createSphericalSpacecraft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SphericalSpacecraftDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Spacecraft
  /spacecraft/{id}:
    delete:
      operationId: deleteSpacecraft
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Spacecraft
    get:
      operationId: retrieveSpacecraft
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Spacecraft
  /spacecrafts:
    get:
      operationId: retrieveAll
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpacecraftDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Spacecraft
  /station:
    post:
      operationId: createGroundStation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroundStationDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroundStationDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Ground Station
  /station/{id}:
    delete:
      operationId: deleteGroundStation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Ground Station
    get:
      operationId: retrieveGroundStation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroundStationDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Ground Station
  /stations:
    get:
      operationId: retrieveAllStations
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroundStationDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Ground Station
  /thruster/chemical:
    post:
      operationId: createChemicalThruster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChemicalThrusterDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrusterDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Thruster
  /thruster/electrical:
    post:
      operationId: createElectricalThruster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectricalThrusterDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrusterDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Thruster
  /thruster/{id}:
    delete:
      operationId: deleteThruster
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
      security:
      - bearer-key: []
      tags:
      - Thruster
    get:
      operationId: retrieveThruster
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrusterDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Thruster
  /thrusters:
    get:
      operationId: retrieveAllThrusters
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThrusterDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - Thruster
  /tle-extrapolation:
    post:
      operationId: extrapolateTle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TleExtrapolationDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TleExtrapolationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - TLE SGP4 Extrapolation
  /tle-extrapolation/result/{id}:
    get:
      operationId: getTleExtrapolationResult
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TleExtrapolationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - TLE SGP4 Extrapolation
  /tle-extrapolation/{id}:
    get:
      operationId: getTleExtrapolation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TleExtrapolationDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - TLE SGP4 Extrapolation
  /tle-extrapolation/{id}/results:
    get:
      operationId: getTleExtrapolationResultByExtrapolationId
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TleExtrapolationResultDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - TLE SGP4 Extrapolation
  /tle-extrapolations:
    get:
      operationId: retrieveAllTleExtrapolations
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TleExtrapolationDto'
          description: OK
      security:
      - bearer-key: []
      tags:
      - TLE SGP4 Extrapolation
components:
  schemas:
    AttitudeActionDto:
      type: object
      properties:
        attitudeMode:
          type: string
          description: "Attitude list, can contains quaternions"
          enum:
          - PROGRADE
          - RETROGRADE
          - NORMAL
          - ANTI_NORMAL
          - RADIAL
          - ANTI_RADIAL
          - QUATERNION
          - NONE
          - SUN_POINTING
          - TELECOM
          - PAYLOAD
          - TRANSITIONAL
          - LOF_ALIGNED_LVLH_CCSDS
          - RETROGRADE_NADIR
        id:
          type: string
          format: uuid
        quaternions:
          type: array
          description: List of quaternions related to the current attitude. Required
            if attitudeMode is QUATERNION
          items:
            $ref: '#/components/schemas/QuaternionActionDto'
        transitionDate:
          type: string
          description: UTC date
      required:
      - attitudeMode
      - transitionDate
    BatteryDto:
      type: object
      properties:
        depthOfDischarge:
          type: number
          format: double
          description: "x in (0,1), Units: [-]"
          maximum: 1
          minimum: 0
        id:
          type: string
          format: uuid
        initialCharge:
          type: number
          format: double
          description: "x in (0,1], Units: [-]"
          maximum: 1
          minimum: 0
        minimumChargeForFiring:
          type: number
          format: double
          description: "x in (0,1), Units: [-]"
          maximum: 1
          minimum: 0
        nominalCapacity:
          type: number
          format: double
          description: "Units: [Wh]"
          minimum: 0
      required:
      - depthOfDischarge
      - initialCharge
      - minimumChargeForFiring
      - nominalCapacity
    BoxSpacecraftInputDto:
      type: object
      properties:
        batteryId:
          type: string
          format: uuid
        dragCoefficient:
          type: number
          format: double
          description: "Units: [-]"
        id:
          type: string
          format: uuid
        maxAngularAcceleration:
          type: number
          format: double
          description: "Units: [deg/s²]"
        maxAngularVelocity:
          type: number
          format: double
          description: "Units: [deg/s]"
        platformMass:
          type: number
          format: double
        reflectionCoefficient:
          type: number
          format: double
          description: "Units: [-]"
        solarArrayId:
          type: string
          format: uuid
        spacecraftLengthX:
          type: number
          format: double
          description: "Units: [m]"
        spacecraftLengthY:
          type: number
          format: double
          description: "Units: [m]"
        spacecraftLengthZ:
          type: number
          format: double
          description: "Units: [m]"
        thrusterId:
          type: string
          format: uuid
      required:
      - batteryId
      - dragCoefficient
      - maxAngularAcceleration
      - maxAngularVelocity
      - platformMass
      - solarArrayId
      - spacecraftLengthX
      - spacecraftLengthY
      - spacecraftLengthZ
      - thrusterId
    CartesianOrbitDto:
      type: object
      properties:
        date:
          type: string
          description: UTC date
        frame:
          type: string
          enum:
          - EME2000
          - ECI
          - TEME
          - GCRF
          - GTOD
          - ECF
          - TNW
          - QSW
        id:
          type: string
          format: uuid
        positionX:
          type: number
          format: double
          description: "Position X. Units: [km]"
        positionY:
          type: number
          format: double
          description: "Position Y. Units: [km]"
        positionZ:
          type: number
          format: double
          description: "Position Z. Units: [km]"
        velocityX:
          type: number
          format: double
          description: "Velocity X. Units: [km/s]"
        velocityY:
          type: number
          format: double
          description: "Velocity Y. Units: [km/s]"
        velocityZ:
          type: number
          format: double
          description: "Velocity Z. Units: [km/s]"
      required:
      - date
      - frame
      - positionX
      - positionY
      - positionZ
      - velocityX
      - velocityY
      - velocityZ
    ChemicalThrusterDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        impulse:
          type: number
          format: double
          description: "Units: [Ns]"
        maximumThrustDuration:
          type: number
          format: double
          description: "Units: [s]"
        propellantMass:
          type: number
          format: double
          description: "Units: [kg]"
        thrust:
          type: number
          format: double
          description: "Units: [N]"
        thrusterAxisInSatelliteFrame:
          type: array
          items:
            type: number
            format: double
        thrusterIsp:
          type: number
          format: double
          description: "Units: [s]"
        thrusterTotalMass:
          type: number
          format: double
          description: "Wet mass. Units: [kg]"
        warmUpDuration:
          type: number
          format: double
          description: "Units: [s]"
      required:
      - impulse
      - maximumThrustDuration
      - propellantMass
      - thrust
      - thrusterAxisInSatelliteFrame
      - thrusterIsp
      - thrusterTotalMass
      - warmUpDuration
    CircularOrbitDto:
      type: object
      properties:
        argumentOfLatitude:
          type: number
          format: double
          description: "Units: [deg]"
        date:
          type: string
          description: UTC date
        eccentricityVectorX:
          type: number
          format: double
          description: "Eccentricity vector X. Units: [-]"
        eccentricityVectorY:
          type: number
          format: double
          description: "Eccentricity vector Y. Units: [-]"
        frame:
          type: string
          enum:
          - EME2000
          - ECI
          - TEME
          - GCRF
          - GTOD
          - ECF
          - TNW
          - QSW
        id:
          type: string
          format: uuid
        inclination:
          type: number
          format: double
          description: "Units: [deg]"
        meanOscType:
          type: string
          enum:
          - MEAN
          - OSC
        positionAngleType:
          type: string
          enum:
          - "TRUE"
          - MEAN
          - ECCENTRIC
        raan:
          type: number
          format: double
          description: "Units: [deg]"
        semiMajorAxis:
          type: number
          format: double
          description: "Units: [km]"
      required:
      - argumentOfLatitude
      - date
      - eccentricityVectorX
      - eccentricityVectorY
      - frame
      - inclination
      - meanOscType
      - positionAngleType
      - raan
      - semiMajorAxis
    CovarianceMatrixDto:
      type: object
    DiagonalCovarianceMatrixDto:
      type: object
      properties:
        date:
          type: string
          description: UTC date
        diagonal:
          type: array
          items:
            type: number
            format: double
        frame:
          type: string
          description: Reference frame
          enum:
          - EME2000
          - ECI
          - TEME
          - GCRF
          - GTOD
          - ECF
          - TNW
          - QSW
        id:
          type: string
          format: uuid
        orbitType:
          type: string
          enum:
          - CARTESIAN
          - KEPLERIAN
          - EQUINOCTIAL
          - CIRCULAR
      required:
      - diagonal
      - frame
      - orbitType
    DragCoefficientEstimationRequestInputDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        parameterStandardDeviation:
          type: number
          format: double
          description: "x in (0,1], Units: [-]"
          exclusiveMaximum: false
          exclusiveMinimum: true
          maximum: 1.0
          minimum: 0.0
        processNoiseStandardDeviation:
          type: number
          format: double
          description: "x in (0,0.1], Units: [-]"
          exclusiveMaximum: false
          exclusiveMinimum: true
          maximum: 0.1
          minimum: 0.0
      required:
      - parameterStandardDeviation
      - processNoiseStandardDeviation
    ElectricalThrusterDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        impulse:
          type: number
          format: double
          description: "Units: [Ns]"
        maximumThrustDuration:
          type: number
          format: double
          description: "Units: [s]"
        propellantMass:
          type: number
          format: double
          description: "Units: [kg]"
        standByPower:
          type: number
          format: double
          description: "Units: [W]"
        thrust:
          type: number
          format: double
          description: "Units: [N]"
        thrusterAxisInSatelliteFrame:
          type: array
          items:
            type: number
            format: double
        thrusterIsp:
          type: number
          format: double
          description: "Units: [s]"
        thrusterPower:
          type: number
          format: double
          description: "Units: [W]"
        thrusterTotalMass:
          type: number
          format: double
          description: "Wet mass. Units: [kg]"
        warmUpDuration:
          type: number
          format: double
          description: "Units: [s]"
        warmUpPower:
          type: number
          format: double
          description: "Units: [W]"
      required:
      - impulse
      - maximumThrustDuration
      - propellantMass
      - standByPower
      - thrust
      - thrusterAxisInSatelliteFrame
      - thrusterIsp
      - thrusterPower
      - thrusterTotalMass
      - warmUpDuration
      - warmUpPower
    EphemerisDto:
      type: object
      properties:
        ephemerisType:
          type: string
          enum:
          - CARTESIAN
          - KEPLERIAN
          - BATTERY
          - QUATERNION
          - THRUST
          - EULER_ANGLES
        id:
          type: string
          format: uuid
        lines:
          type: array
          items:
            $ref: '#/components/schemas/EphemerisLineDto'
      required:
      - ephemerisType
      - lines
    EphemerisLineDto:
      type: object
    EphemerisRequestDto:
      type: object
      properties:
        ephemerisTypes:
          type: array
          description: List of requested ephemeris types
          items:
            type: string
            description: List of requested ephemeris types
            enum:
            - CARTESIAN
            - KEPLERIAN
            - BATTERY
            - QUATERNION
            - THRUST
            - EULER_ANGLES
        id:
          type: string
          format: uuid
        step:
          type: number
          format: double
          description: "Units: [s]"
          exclusiveMinimum: true
          minimum: 0
      required:
      - ephemerisTypes
      - step
    EquinoctialOrbitDto:
      type: object
      properties:
        date:
          type: string
          description: UTC date
        eccentricityVectorX:
          type: number
          format: double
          description: "Eccentricity vector X. Units: [-]"
        eccentricityVectorY:
          type: number
          format: double
          description: "Eccentricity vector Y. Units: [-]"
        equinoctialLongitude:
          type: number
          format: double
          description: "Units: [deg]"
        frame:
          type: string
          enum:
          - EME2000
          - ECI
          - TEME
          - GCRF
          - GTOD
          - ECF
          - TNW
          - QSW
        id:
          type: string
          format: uuid
        inclinationVectorX:
          type: number
          format: double
          description: "Inclination vector X. Units: [-]"
        inclinationVectorY:
          type: number
          format: double
          description: "Inclination vector Y. Units: [-]"
        meanOscType:
          type: string
          enum:
          - MEAN
          - OSC
        positionAngleType:
          type: string
          enum:
          - "TRUE"
          - MEAN
          - ECCENTRIC
        semiMajorAxis:
          type: number
          format: double
          description: "Units: [km]"
      required:
      - date
      - eccentricityVectorX
      - eccentricityVectorY
      - equinoctialLongitude
      - frame
      - inclinationVectorX
      - inclinationVectorY
      - meanOscType
      - positionAngleType
      - semiMajorAxis
    EstimatedParameterDto:
      type: object
      properties:
        date:
          type: string
        id:
          type: string
          format: uuid
        value:
          type: number
          format: double
    EventLogDto:
      type: object
    EventsRequestDto:
      type: object
    FiringActionDto:
      type: object
      properties:
        firingAttitude:
          type: string
          enum:
          - PROGRADE
          - RETROGRADE
          - NORMAL
          - ANTI_NORMAL
          - RADIAL
          - ANTI_RADIAL
          - QUATERNION
          - NONE
          - SUN_POINTING
          - TELECOM
          - PAYLOAD
          - TRANSITIONAL
          - LOF_ALIGNED_LVLH_CCSDS
          - RETROGRADE_NADIR
        firingDuration:
          type: number
          format: double
          description: "Units: [s]"
        id:
          type: string
          format: uuid
        postFiringAttitude:
          type: string
          enum:
          - PROGRADE
          - RETROGRADE
          - NORMAL
          - ANTI_NORMAL
          - RADIAL
          - ANTI_RADIAL
          - QUATERNION
          - NONE
          - SUN_POINTING
          - TELECOM
          - PAYLOAD
          - TRANSITIONAL
          - LOF_ALIGNED_LVLH_CCSDS
          - RETROGRADE_NADIR
        startFiring:
          type: string
          description: UTC date
        warmUpAttitude:
          type: string
          enum:
          - PROGRADE
          - RETROGRADE
          - NORMAL
          - ANTI_NORMAL
          - RADIAL
          - ANTI_RADIAL
          - QUATERNION
          - NONE
          - SUN_POINTING
          - TELECOM
          - PAYLOAD
          - TRANSITIONAL
          - LOF_ALIGNED_LVLH_CCSDS
          - RETROGRADE_NADIR
        warmUpDuration:
          type: number
          format: double
          description: "Units: [s]"
      required:
      - firingAttitude
      - firingDuration
      - postFiringAttitude
      - startFiring
      - warmUpDuration
    FiringAnalysisDto:
      type: object
      properties:
        argumentOfPerigeeDelta:
          type: number
          format: double
        date:
          type: string
        eccentricityDelta:
          type: number
          format: double
        estimatedAcceleration:
          type: number
          format: double
        estimatedThrust:
          type: number
          format: double
        estimatedThrustTnwDirection:
          type: array
          items:
            type: number
            format: double
        id:
          type: string
          format: uuid
        inclinationDelta:
          type: number
          format: double
        raanDelta:
          type: number
          format: double
        semiMajorAxisDelta:
          type: number
          format: double
        smoothedKeplerianElementsAfterFiring:
          $ref: '#/components/schemas/SmoothedKeplerianElementsDto'
        smoothedKeplerianElementsBeforeFiring:
          $ref: '#/components/schemas/SmoothedKeplerianElementsDto'
        status:
          type: string
          enum:
          - PROCESSED
          - PENDING
          - FAILED
    FiringAnalysisReportDto:
      type: object
      properties:
        failedAnalysesDates:
          type: array
          items:
            type: string
            format: date-time
        numberOfFailedAnalyses:
          type: integer
          format: int32
        numberOfPendingAnalyses:
          type: integer
          format: int32
        numberOfProcessedAnalyses:
          type: integer
          format: int32
        pendingAnalysesDates:
          type: array
          items:
            type: string
            format: date-time
        processedAnalyses:
          type: array
          items:
            $ref: '#/components/schemas/FiringAnalysisDto'
    FullCovarianceMatrixDto:
      type: object
      properties:
        date:
          type: string
          description: UTC date
        frame:
          type: string
          description: Reference frame
          enum:
          - EME2000
          - ECI
          - TEME
          - GCRF
          - GTOD
          - ECF
          - TNW
          - QSW
        id:
          type: string
          format: uuid
        matrix:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
        orbitType:
          type: string
          enum:
          - CARTESIAN
          - KEPLERIAN
          - EQUINOCTIAL
          - CIRCULAR
      required:
      - frame
      - matrix
      - orbitType
    GpsNmeaMeasurementsRequestDto:
      type: object
      properties:
        altitudeStandardDeviation:
          type: number
          format: double
          description: "Expected altitude standard deviation. Units: [m]"
        generationStep:
          type: integer
          format: int32
          description: "Units: [s]"
        groundSpeedStandardDeviation:
          type: number
          format: double
          description: "Expected ground speed standard deviation. Units: [m/s]"
        id:
          type: string
          format: uuid
        latitudeStandardDeviation:
          type: number
          format: double
          description: "Expected latitude standard deviation. Units: [deg]"
        longitudeStandardDeviation:
          type: number
          format: double
          description: "Expected longitude standard deviation. Units: [deg]"
      required:
      - altitudeStandardDeviation
      - generationStep
      - groundSpeedStandardDeviation
      - latitudeStandardDeviation
      - longitudeStandardDeviation
    GpsNmeaRawTelemetryDto:
      type: object
      properties:
        altitudeStandardDeviation:
          type: number
          format: double
          description: "Units: [m]"
        groundSpeedStandardDeviation:
          type: number
          format: double
          description: "Units: [m/s]"
        id:
          type: string
          format: uuid
        latitudeStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        longitudeStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        nmeaSentences:
          type: array
          items:
            type: string
      required:
      - altitudeStandardDeviation
      - groundSpeedStandardDeviation
      - latitudeStandardDeviation
      - longitudeStandardDeviation
    GpsNmeaTelemetryDto:
      type: object
      properties:
        altitudeStandardDeviation:
          type: number
          format: double
          description: "Units: [m]"
        dates:
          type: array
          description: List of UTC dates
          items:
            type: string
            description: List of UTC dates
        groundSpeedStandardDeviation:
          type: number
          format: double
          description: "Units: [m/s]"
        id:
          type: string
          format: uuid
        latitudeStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        longitudeStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        measurements:
          type: array
          description: "Array of double: latitude, longitude, norm of velocity in\
            \ ECF frame, altitude, geoid separation. Units: [deg], [deg], [m/s], [m],\
            \ [m]"
          items:
            type: array
            description: "Array of double: latitude, longitude, norm of velocity in\
              \ ECF frame, altitude, geoid separation. Units: [deg], [deg], [m/s],\
              \ [m], [m]"
            items:
              type: number
              format: double
              description: "Array of double: latitude, longitude, norm of velocity\
                \ in ECF frame, altitude, geoid separation. Units: [deg], [deg], [m/s],\
                \ [m], [m]"
      required:
      - altitudeStandardDeviation
      - dates
      - groundSpeedStandardDeviation
      - latitudeStandardDeviation
      - longitudeStandardDeviation
      - measurements
    GpsPvMeasurementsRequestDto:
      type: object
      properties:
        frame:
          type: string
          enum:
          - EME2000
          - ECI
          - TEME
          - GCRF
          - GTOD
          - ECF
          - TNW
          - QSW
        generationStep:
          type: integer
          format: int32
          description: "Units: [s]"
        id:
          type: string
          format: uuid
        positionStandardDeviation:
          type: number
          format: double
          description: "Units: [m]"
        velocityStandardDeviation:
          type: number
          format: double
          description: "Units: [m/s]"
      required:
      - frame
      - generationStep
      - positionStandardDeviation
      - velocityStandardDeviation
    GpsPvTelemetryDto:
      type: object
      properties:
        dates:
          type: array
          description: List of UTC dates
          items:
            type: string
            description: List of UTC dates
        frame:
          type: string
          description: Frame of definition of the position velocity vectors
          enum:
          - EME2000
          - ECI
          - TEME
          - GCRF
          - GTOD
          - ECF
          - TNW
          - QSW
        id:
          type: string
          format: uuid
        measurements:
          type: array
          description: "List containing position and velocity vectors [x y z vx vy\
            \ vz], Units: [m] [ms^-1]"
          items:
            type: array
            description: "List containing position and velocity vectors [x y z vx\
              \ vy vz], Units: [m] [ms^-1]"
            items:
              type: number
              format: double
              description: "List containing position and velocity vectors [x y z vx\
                \ vy vz], Units: [m] [ms^-1]"
        positionStandardDeviation:
          type: number
          format: double
          description: "Units: [m]"
        velocityStandardDeviation:
          type: number
          format: double
          description: "Units: [ms^-1]"
      required:
      - dates
      - measurements
      - positionStandardDeviation
      - velocityStandardDeviation
    GroundStationDto:
      type: object
      properties:
        altitude:
          type: number
          format: double
          description: "Units: [km]"
        elevationMask:
          type: array
          description: "Units: Double[deg][deg]"
          items:
            type: array
            description: "Units: Double[deg][deg]"
            items:
              type: number
              format: double
              description: "Units: Double[deg][deg]"
        id:
          type: string
          format: uuid
        latitude:
          type: number
          format: double
          description: "Units: [deg]"
        longitude:
          type: number
          format: double
          description: "Units: [deg]"
        minElevation:
          type: number
          format: double
          description: "Units: [deg]"
        name:
          type: string
      required:
      - altitude
      - latitude
      - longitude
      - name
    KeplerianOrbitDto:
      type: object
      properties:
        anomaly:
          type: number
          format: double
          description: "Units: [deg]"
        argumentOfPerigee:
          type: number
          format: double
          description: "Units: [deg]"
        date:
          type: string
          description: UTC date
        eccentricity:
          type: number
          format: double
          description: "Units: [-]"
        frame:
          type: string
          enum:
          - EME2000
          - ECI
          - TEME
          - GCRF
          - GTOD
          - ECF
          - TNW
          - QSW
        id:
          type: string
          format: uuid
        inclination:
          type: number
          format: double
          description: "Units: [deg]"
        meanOscType:
          type: string
          enum:
          - MEAN
          - OSC
        positionAngleType:
          type: string
          enum:
          - "TRUE"
          - MEAN
          - ECCENTRIC
        raan:
          type: number
          format: double
          description: "Units: [deg]"
        semiMajorAxis:
          type: number
          format: double
          description: "Units: [km]"
      required:
      - anomaly
      - argumentOfPerigee
      - date
      - eccentricity
      - frame
      - inclination
      - meanOscType
      - positionAngleType
      - raan
      - semiMajorAxis
    ManeuverGenerationInputDto:
      type: object
      properties:
        deltaEccentricity:
          type: number
          format: double
          description: "Units: [-]"
        deltaInclination:
          type: number
          format: double
          description: "Units: [deg]"
        deltaSemiMajorAxis:
          type: number
          format: double
          description: "Units: [km]"
        initialOrbitalStateId:
          type: string
          format: uuid
        maximumDuration:
          type: number
          format: double
          description: "Units: [s]"
        quaternionStep:
          type: number
          format: double
          description: "Units: [s]"
        requiredOutputOrbitalStates:
          type: string
          enum:
          - ALL
          - LAST
        strategyId:
          type: string
          format: uuid
      required:
      - deltaEccentricity
      - deltaInclination
      - deltaSemiMajorAxis
      - initialOrbitalStateId
      - maximumDuration
      - quaternionStep
      - requiredOutputOrbitalStates
      - strategyId
    ManeuverGenerationLogDto:
      type: object
      properties:
        computationDate:
          type: string
          format: date-time
        computationStatus:
          type: string
          enum:
          - COMPUTATION_FAILURE
          - COMPUTATION_SUCCESS
        errorMessages:
          type: array
          items:
            type: string
        id:
          type: string
          format: uuid
    ManeuverGenerationOutputDto:
      type: object
      properties:
        deltaEccentricity:
          type: number
          format: double
        deltaInclination:
          type: number
          format: double
        deltaSemiMajorAxis:
          type: number
          format: double
        id:
          type: string
          format: uuid
        initialOrbitalState:
          $ref: '#/components/schemas/OrbitalStateDto'
        maximumDuration:
          type: number
          format: double
        quaternionStep:
          type: number
          format: double
        requiredOutputOrbitalStates:
          type: string
          enum:
          - ALL
          - LAST
        strategy:
          $ref: '#/components/schemas/ManeuverStrategyDto'
    ManeuverGenerationReportDto:
      type: object
      properties:
        averageThrustDuration:
          type: number
          format: double
        finalDutyCycle:
          type: number
          format: double
        numberOfPeriod:
          type: number
          format: double
        orbitalStates:
          type: array
          items:
            $ref: '#/components/schemas/OrbitalStateDto'
        simulationDuration:
          type: number
          format: double
        thrusterDutyCycle:
          type: number
          format: double
        totalBurnsDuration:
          type: number
          format: double
        totalConsumption:
          type: number
          format: double
        totalDeltaV:
          type: number
          format: double
        totalImpulse:
          type: number
          format: double
        totalNumberOfBurns:
          type: integer
          format: int32
        totalWarmupDutyCycle:
          type: number
          format: double
    ManeuverGenerationResultDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        log:
          $ref: '#/components/schemas/ManeuverGenerationLogDto'
        report:
          $ref: '#/components/schemas/ManeuverGenerationReportDto'
        request:
          $ref: '#/components/schemas/ManeuverGenerationOutputDto'
        roadmap:
          $ref: '#/components/schemas/RoadmapDto'
    ManeuverStrategyDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        numberOfRestOrbits:
          type: integer
          format: int32
          description: "Units: [-]"
        numberOfShiftOrbits:
          type: integer
          format: int32
          description: "Units: [-]"
        numberOfThrustOrbits:
          type: integer
          format: int32
          description: "Units: [-]"
        orbitalDutyCycle:
          type: number
          format: double
          description: "Units: [%]"
        stopThrustAtEclipse:
          type: boolean
        thrustArcDefinition:
          type: string
          enum:
          - DUTY_CYCLE
          - THRUST_DURATION
        thrustArcDuration:
          type: number
          format: double
          description: "Units: [s]"
        thrustArcsNumber:
          type: string
          enum:
          - ONE
          - TWO
        thrustArcsPosition:
          type: string
          enum:
          - ASCENDING_AND_DESCENDING_NODES
          - ASCENDING_NODE
          - CUSTOM
          - DESCENDING_NODE
          - APOGEE_AND_PERIGEE
          - APOGEE
          - PERIGEE
          - ASCENDING_AND_DESCENDING_ANTINODES
          - ASCENDING_ANTINODE
          - DESCENDING_ANTINODE
          - MEAN_LONGITUDE
      required:
      - numberOfRestOrbits
      - numberOfShiftOrbits
      - numberOfThrustOrbits
      - stopThrustAtEclipse
      - thrustArcDefinition
      - thrustArcsNumber
      - thrustArcsPosition
    MeasurementsRequestDto:
      type: object
    OemRequestDto:
      type: object
      properties:
        creator:
          type: string
        ephemeridesStep:
          type: number
          format: double
          description: "Units: [s]"
        frame:
          type: string
          description: The frame must be inertial
          enum:
          - EME2000
          - ECI
          - TEME
          - GCRF
          - GTOD
          - ECF
          - TNW
          - QSW
        id:
          type: string
          format: uuid
        objectId:
          type: string
        objectName:
          type: string
        writeAcceleration:
          type: boolean
          description: Include the accelerations in the output file
        writeCovariance:
          type: boolean
          description: Include the covariance matrices in the output file
      required:
      - creator
      - ephemeridesStep
      - frame
      - objectId
      - objectName
    OpticalMeasurementsRequestDto:
      type: object
      properties:
        azimuthStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        elevationStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        generationStep:
          type: integer
          format: int32
          description: "Units: [s]"
        groundStationId:
          type: string
          format: uuid
          description: The UUID of the observation station
        id:
          type: string
          format: uuid
      required:
      - azimuthStandardDeviation
      - elevationStandardDeviation
      - generationStep
      - groundStationId
    OpticalTelemetryDto:
      type: object
      properties:
        azimuthStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        dates:
          type: array
          description: List of UTC dates
          items:
            type: string
            description: List of UTC dates
        elevationStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        groundStationId:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        measurements:
          type: array
          description: "Array of double: azimuth, elevation. Units: [deg], [deg]"
          items:
            type: array
            description: "Array of double: azimuth, elevation. Units: [deg], [deg]"
            items:
              type: number
              format: double
              description: "Array of double: azimuth, elevation. Units: [deg], [deg]"
      required:
      - azimuthStandardDeviation
      - dates
      - elevationStandardDeviation
      - groundStationId
      - measurements
    OrbitDataMessageRequestDto:
      type: object
    OrbitDeterminationConfigurationDto:
      type: object
    OrbitDeterminationInDepthResultsDto:
      type: object
      properties:
        covarianceMatrices:
          type: array
          items:
            $ref: '#/components/schemas/CovarianceMatrixDto'
        estimatedDragCoefficients:
          type: array
          items:
            $ref: '#/components/schemas/EstimatedParameterDto'
        estimatedReflectivityCoefficients:
          type: array
          items:
            $ref: '#/components/schemas/EstimatedParameterDto'
        meanOrbits:
          type: array
          items:
            $ref: '#/components/schemas/OrbitDto'
        osculatingOrbits:
          type: array
          items:
            $ref: '#/components/schemas/OrbitDto'
    OrbitDeterminationLogDto:
      type: object
      properties:
        computationDate:
          type: string
          format: date-time
        computationStatus:
          type: string
          enum:
          - COMPUTATION_FAILURE
          - COMPUTATION_SUCCESS
        errorMessages:
          type: array
          items:
            type: string
        id:
          type: string
          format: uuid
    OrbitDeterminationOutputDto:
      type: object
    OrbitDeterminationReportDto:
      type: object
      properties:
        numberOfRejectedMeasurements:
          type: integer
          format: int32
        numberOfUsedMeasurements:
          type: integer
          format: int32
        residualsStatistics:
          type: array
          items:
            $ref: '#/components/schemas/OrbitDeterminationResidualStatisticsDto'
    OrbitDeterminationResidualStatisticsDto:
      type: object
      properties:
        field:
          type: string
          example: GPS_NMEA
        id:
          type: string
          format: uuid
        mean:
          type: number
          format: double
        median:
          type: number
          format: double
        residuals:
          type: array
          items:
            $ref: '#/components/schemas/ResidualDto'
        standardDeviation:
          type: number
          format: double
    OrbitDeterminationResultDto:
      type: object
      properties:
        estimatedStates:
          type: array
          items:
            $ref: '#/components/schemas/OrbitalStateDto'
        firingAnalysisReport:
          $ref: '#/components/schemas/FiringAnalysisReportDto'
        id:
          type: string
          format: uuid
        inDepthResults:
          $ref: '#/components/schemas/OrbitDeterminationInDepthResultsDto'
        log:
          $ref: '#/components/schemas/OrbitDeterminationLogDto'
        report:
          $ref: '#/components/schemas/OrbitDeterminationReportDto'
        request:
          $ref: '#/components/schemas/OrbitDeterminationOutputDto'
        status:
          type: string
          enum:
          - SUCCESS
          - ANALYSIS_NEEDED
          - FAILURE
    OrbitDto:
      type: object
    OrbitExtrapolationInputDto:
      type: object
      properties:
        ephemerisRequestId:
          type: string
          format: uuid
        eventsRequestIds:
          type: array
          items:
            type: string
            format: uuid
        extrapolateCovariance:
          type: boolean
          description: Should the covariance be propagated. Default is false
        extrapolationDuration:
          type: number
          format: double
          description: "Units: [s]"
        initialOrbitalStateId:
          type: string
          format: uuid
        measurementsRequestId:
          type: string
          format: uuid
        orbitDataMessageRequestId:
          type: string
          format: uuid
        requiredOutputOrbitalStates:
          type: string
          description: Which orbital states should be included in the output
          enum:
          - ALL
          - LAST
        roadmapId:
          type: string
          format: uuid
      required:
      - extrapolationDuration
      - initialOrbitalStateId
    OrbitExtrapolationLogDto:
      type: object
      properties:
        computationDate:
          type: string
          format: date-time
        computationStatus:
          type: string
          enum:
          - COMPUTATION_FAILURE
          - COMPUTATION_SUCCESS
        errorMessages:
          type: array
          items:
            type: string
        id:
          type: string
          format: uuid
    OrbitExtrapolationOutputDto:
      type: object
      properties:
        ephemerisRequest:
          $ref: '#/components/schemas/EphemerisRequestDto'
        eventsRequests:
          type: array
          items:
            $ref: '#/components/schemas/EventsRequestDto'
        extrapolateCovariance:
          type: boolean
        extrapolationDuration:
          type: number
          format: double
        id:
          type: string
          format: uuid
        initialOrbitalState:
          $ref: '#/components/schemas/OrbitalStateDto'
        measurementsRequest:
          $ref: '#/components/schemas/MeasurementsRequestDto'
        orbitDataMessageRequest:
          $ref: '#/components/schemas/OrbitDataMessageRequestDto'
        requiredOutputOrbitalStates:
          type: string
          enum:
          - ALL
          - LAST
        roadmap:
          $ref: '#/components/schemas/RoadmapDto'
    OrbitExtrapolationResultDto:
      type: object
      properties:
        computedEvents:
          type: array
          items:
            $ref: '#/components/schemas/EventLogDto'
        computedMeasurements:
          type: array
          items:
            $ref: '#/components/schemas/TelemetryDto'
        ephemerides:
          type: array
          items:
            $ref: '#/components/schemas/EphemerisDto'
        id:
          type: string
          format: uuid
        log:
          $ref: '#/components/schemas/OrbitExtrapolationLogDto'
        orbitDataMessageOutput:
          type: string
        orbitalStates:
          type: array
          items:
            $ref: '#/components/schemas/OrbitalStateDto'
        request:
          $ref: '#/components/schemas/OrbitExtrapolationOutputDto'
    OrbitalEventsRequestDto:
      type: object
      properties:
        eventsType:
          type: array
          items:
            type: string
            enum:
            - NODE
            - ECLIPSE
            - ORBITAL_6AMPM
            - ORBITAL_NOON_MIDNIGHT
            - APSIDE
        id:
          type: string
          format: uuid
        startDate:
          type: string
          description: UTC date
      required:
      - eventsType
    OrbitalStateCreationRequestDto:
      type: object
      properties:
        covarianceMatrixId:
          type: string
          format: uuid
        orbitId:
          type: string
          format: uuid
          description: Orbit ID (osculating or mean) is mandatory if no TLE is provided.
        propagationContextId:
          type: string
          format: uuid
        spacecraftId:
          type: string
          format: uuid
        tle:
          $ref: '#/components/schemas/TLE'
      required:
      - propagationContextId
      - spacecraftId
    OrbitalStateDto:
      type: object
      properties:
        covarianceMatrixId:
          type: string
          format: uuid
        creationDate:
          type: string
        fittedTle:
          $ref: '#/components/schemas/TLE'
        id:
          type: string
          format: uuid
        meanOrbitId:
          type: string
          format: uuid
          description: Mean orbit data computed with the DSST propagator.
        osculatingOrbitId:
          type: string
          format: uuid
        propagationContextId:
          type: string
          format: uuid
        source:
          type: string
          enum:
          - ORBIT_DETERMINATION
          - ORBIT_EXTRAPOLATION
          - MANUAL
          - MANEUVER_GENERATION
        spacecraftId:
          type: string
          format: uuid
    OutlierManagerSettingsDto:
      type: object
      properties:
        outlierManagerScale:
          type: number
          format: double
          description: Number of standard deviations for outlier detection
        outliersManagerWarmup:
          type: integer
          format: int32
          description: Number of warmup iterations or number of measurement without
            outlier rejection
      required:
      - outlierManagerScale
      - outliersManagerWarmup
    ParameterEstimationRequestOutputDto:
      type: object
    PropagationContextDto:
      type: object
      properties:
        atmosphereType:
          type: string
          description: Required if perturbations include DRAG
          enum:
          - HARRIS_PRIESTER
          - NRL_MSISE00
        earthPotentialDeg:
          type: integer
          format: int32
          description: "Required if perturbations include EARTH_POTENTIAL. Value must\
            \ be earthPotentialDeg > 2. Units: [-]"
          minimum: 2
        earthPotentialOrd:
          type: integer
          format: int32
          description: "Required if perturbations include EARTH_POTENTIAL. Value must\
            \ be 0 <= earthPotentialOrd <= earthPotentialDeg. Units: [-]"
        id:
          type: string
          format: uuid
        integratorMaxStep:
          type: number
          format: double
          default: 100
          description: "Units: [s]. Default 100 s. Must be integratorMaxStep > integratorMinStep."
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 86400.0
          minimum: 0.001
        integratorMinStep:
          type: number
          format: double
          default: 0.01
          description: "Units: [s]. Default 0.01 s. Must be integratorMinStep > 0.001\
            \ s."
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 86400.0
          minimum: 0.001
        integratorType:
          type: string
          enum:
          - DORMAND_PRINCE_853
          - DORMAND_PRINCE_54
          - ADAMS_MOULTON
          - RUNGE_KUTTA
        perturbations:
          type: array
          description: Default to DORMAND_PRINCE_853.
          items:
            type: string
            description: Default to DORMAND_PRINCE_853.
            enum:
            - EARTH_POTENTIAL
            - SRP
            - THIRD_BODY
            - DRAG
            - CONSTANT_THRUST
            - IMPULSIVE_THRUST
          uniqueItems: true
        solarFlux:
          type: number
          format: double
          description: "Required if perturbations include DRAG. Units: [sfu]"
    QuaternionActionDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        q0:
          type: number
          format: double
          default: 1.0
          description: "Scalar component. Units: [-]"
        q1:
          type: number
          format: double
          description: "Vector part of the quaternion. First component. Units: [-]"
        q2:
          type: number
          format: double
          description: "Vector part of the quaternion. Second component. Units: [-]"
        q3:
          type: number
          format: double
          description: "Vector part of the quaternion. Third component. Units: [-]"
        transitionDate:
          type: string
          description: UTC date
      required:
      - q0
      - q1
      - q2
      - q3
      - transitionDate
    RadarMeasurementsRequestDto:
      type: object
      properties:
        azimuthStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        elevationStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        generationStep:
          type: integer
          format: int32
          description: "Units: [s]"
        groundStationId:
          type: string
          format: uuid
          description: The UUID of the tracking station
        id:
          type: string
          format: uuid
        rangeRateStandardDeviation:
          type: number
          format: double
          description: "Units: [m/s]"
        rangeStandardDeviation:
          type: number
          format: double
          description: "Units: [m]"
        twoWayMeasurement:
          type: boolean
          description: True for a two way signal
      required:
      - azimuthStandardDeviation
      - elevationStandardDeviation
      - generationStep
      - groundStationId
      - rangeRateStandardDeviation
      - rangeStandardDeviation
      - twoWayMeasurement
    RadarTelemetryDto:
      type: object
      properties:
        azimuthStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        dates:
          type: array
          description: List of UTC dates
          items:
            type: string
            description: List of UTC dates
        elevationStandardDeviation:
          type: number
          format: double
          description: "Units: [deg]"
        groundStationId:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        measurements:
          type: array
          description: "Array of double: range, range rate, azimuth, elevation. Units:\
            \ [m], [m/s], [deg], [deg]"
          items:
            type: array
            description: "Array of double: range, range rate, azimuth, elevation.\
              \ Units: [m], [m/s], [deg], [deg]"
            items:
              type: number
              format: double
              description: "Array of double: range, range rate, azimuth, elevation.\
                \ Units: [m], [m/s], [deg], [deg]"
        rangeRateStandardDeviation:
          type: number
          format: double
          description: "Units: [m/s]"
        rangeStandardDeviation:
          type: number
          format: double
          description: "Units: [m]"
        twoWayMeasurement:
          type: boolean
      required:
      - azimuthStandardDeviation
      - dates
      - elevationStandardDeviation
      - groundStationId
      - measurements
      - rangeRateStandardDeviation
      - rangeStandardDeviation
      - twoWayMeasurement
    ReflectivityCoefficientEstimationRequestInputDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        parameterStandardDeviation:
          type: number
          format: double
          description: "x in (0,1], Units: [-]"
          exclusiveMaximum: false
          exclusiveMinimum: true
          maximum: 1.0
          minimum: 0.0
        processNoiseStandardDeviation:
          type: number
          format: double
          description: "x in (0,0.1], Units: [-]"
          exclusiveMaximum: false
          exclusiveMinimum: true
          maximum: 0.1
          minimum: 0.0
      required:
      - parameterStandardDeviation
      - processNoiseStandardDeviation
    ResidualDto:
      type: object
      properties:
        date:
          type: string
        id:
          type: string
          format: uuid
        value:
          type: number
          format: double
    RoadmapActionDto:
      type: object
    RoadmapDto:
      type: object
    RoadmapFromActionsDto:
      type: object
      properties:
        finalDate:
          type: string
          description: UTC date
        id:
          type: string
          format: uuid
        initialDate:
          type: string
          description: UTC date
        roadmapActionIDs:
          type: array
          description: "The UUIDs of the roadmap actions (firing, attitude or quaternion)\
            \ to be executed"
          items:
            type: string
            format: uuid
            description: "The UUIDs of the roadmap actions (firing, attitude or quaternion)\
              \ to be executed"
      required:
      - finalDate
      - initialDate
      - roadmapActionIDs
    SensorEventRequestDto:
      type: object
      properties:
        ephemeridesStep:
          type: number
          format: double
        eventsType:
          type: array
          items:
            type: string
            enum:
            - SUN_IN_FOV
        id:
          type: string
          format: uuid
        sensorAxisInSpacecraftFrame:
          type: array
          items:
            type: number
            format: double
        sensorFieldOfViewHalfAngle:
          type: number
          format: double
          description: "The half angle defining the conical field of view. Units [deg]"
        startDate:
          type: string
          description: UTC date
      required:
      - ephemeridesStep
      - eventsType
      - sensorAxisInSpacecraftFrame
      - sensorFieldOfViewHalfAngle
    SmoothedKeplerianElementsDto:
      type: object
      properties:
        argumentOfPerigee:
          type: number
          format: double
        argumentOfPerigeeStandardDeviation:
          type: number
          format: double
        eccentricity:
          type: number
          format: double
        eccentricityStandardDeviation:
          type: number
          format: double
        id:
          type: string
          format: uuid
        inclination:
          type: number
          format: double
        inclinationStandardDeviation:
          type: number
          format: double
        raan:
          type: number
          format: double
        raanStandardDeviation:
          type: number
          format: double
        semiMajorAxis:
          type: number
          format: double
        semiMajorAxisStandardDeviation:
          type: number
          format: double
    SolarArrayDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        maximumPower:
          type: number
          format: double
          description: "Units: [W]"
        satelliteFaces:
          type: array
          items:
            type: string
            enum:
            - PLUS_X
            - MINUS_X
            - PLUS_Y
            - MINUS_Y
            - PLUS_Z
            - MINUS_Z
        solarArrayAxisInSatelliteFrame:
          type: array
          items:
            type: number
            format: double
        solarArrayDefinitionType:
          type: string
          enum:
          - MAXIMUM_POWER
          - SURFACE
          - SURFACE_AND_POWER
        solarArrayEfficiency:
          type: number
          format: double
          description: "x in (0,1), Units: [-]"
        solarArrayNormalInSatelliteFrame:
          type: array
          items:
            type: number
            format: double
        solarArrayType:
          type: string
          enum:
          - SOLAR_ARRAY_TYPE_BODY
          - SOLAR_ARRAY_TYPE_DEPLOYABLE_FIXED
          - SOLAR_ARRAY_TYPE_DEPLOYABLE_ROTATING
          - SOLAR_ARRAY_TYPE_NONE
        surface:
          type: number
          format: double
          description: "Units: [m²]"
      required:
      - solarArrayDefinitionType
      - solarArrayEfficiency
      - solarArrayNormalInSatelliteFrame
      - solarArrayType
    SpacecraftDto:
      type: object
    SphericalSpacecraftDto:
      type: object
      properties:
        dragCoefficient:
          type: number
          format: double
          description: "Units: [-]"
        id:
          type: string
          format: uuid
        platformMass:
          type: number
          format: double
          description: "Units: [kg]"
        reflectionCoefficient:
          type: number
          format: double
          description: "Units: [-]"
        sphericalCrossSection:
          type: number
          format: double
          description: "Units: [m²]"
      required:
      - dragCoefficient
      - platformMass
      - sphericalCrossSection
    StationVisibilityEventsRequestDto:
      type: object
      properties:
        groundStationIDs:
          type: array
          description: The station's UUID
          items:
            type: string
            format: uuid
            description: The station's UUID
        id:
          type: string
          format: uuid
        startDate:
          type: string
          description: UTC date
      required:
      - groundStationIDs
    TLE:
      type: object
      properties:
        line1:
          type: string
        line2:
          type: string
    TelemetryDto:
      type: object
    ThrustVectorEstimationRequestInputDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        parameterStandardDeviation:
          type: number
          format: double
          description: "x in (0,1], Units: [-]"
          exclusiveMaximum: false
          exclusiveMinimum: true
          maximum: 1.0
          minimum: 0.0
        processNoiseStandardDeviation:
          type: number
          format: double
          description: "x in (0,0.1], Units: [-]"
          exclusiveMaximum: false
          exclusiveMinimum: true
          maximum: 0.1
          minimum: 0.0
      required:
      - parameterStandardDeviation
      - processNoiseStandardDeviation
    ThrusterDto:
      type: object
    TleExtrapolationDto:
      type: object
      properties:
        dates:
          type: array
          items:
            type: string
        initialTle:
          $ref: '#/components/schemas/TLE'
      required:
      - dates
      - initialTle
    TleExtrapolationResultDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orbits:
          type: array
          items:
            $ref: '#/components/schemas/OrbitDto'
        tleExtrapolation:
          $ref: '#/components/schemas/TleExtrapolationDto'
    UkfOrbitDeterminationConfigurationDto:
      type: object
      allOf:
      - $ref: '#/components/schemas/OrbitDeterminationConfigurationDto'
      - type: object
        properties:
          alpha:
            type: number
            format: double
            description: Defines the spread of the sigma points. Typical values from
              1E-4 to 1E-1
          beta:
            type: number
            format: double
            description: Incorporates knowledge about the distribution of the state
              vector. Beta = 2 is optimal for Gaussian distributions
          id:
            type: string
            format: uuid
          kappa:
            type: number
            format: double
            description: Secondary scaling parameter. Usually set to 0
          noiseProviderType:
            type: string
            description: Model for the state noise dynamics
            enum:
            - BASIC
            - SNC
            - DMC
            - EDB_CD
          outlierManagerSettings:
            $ref: '#/components/schemas/OutlierManagerSettingsDto'
          processNoiseMatrixId:
            type: string
            format: uuid
            description: UUID of the covariance matrix for the state noise distribution
      required:
      - alpha
      - beta
      - kappa
      - noiseProviderType
      - processNoiseMatrixId
    UkfOrbitDeterminationInputDto:
      type: object
      properties:
        configurationId:
          type: string
          format: uuid
        estimatedResultsMinStep:
          type: number
          format: double
          description: "Minimum step for the estimated results. Unit: s."
        initialOrbitalStateId:
          type: string
          format: uuid
        parameterEstimationRequestIds:
          type: array
          items:
            type: string
            format: uuid
        roadmapId:
          type: string
          format: uuid
        telemetryId:
          type: string
          format: uuid
      required:
      - configurationId
      - initialOrbitalStateId
      - telemetryId
  securitySchemes:
    bearer-key:
      bearerFormat: JWT
      scheme: bearer
      type: http
